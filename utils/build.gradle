apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        multiDexEnabled true
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation project(":jutils")
    provided fileTree(dir: 'libs', include: ['*.jar'])

    implementation libs.rxJava
    implementation libs.kotlinStd
    implementation libs.kotlinReflect

    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:support-v4:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    implementation "org.jetbrains.anko:anko:$anko_version"
    implementation "joda-time:joda-time:$joda_time_version"
    implementation "com.google.android.gms:play-services-base:$google_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.hannesdorfmann.mosby3:mvi:$mosby_version"
    implementation "commons-validator:commons-validator:$apache_validator_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    kapt "com.android.databinding:compiler:$android_plugin_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}