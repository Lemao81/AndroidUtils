apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion Versions.compileSdkVersion

    defaultConfig {
        minSdkVersion Versions.minSdkVersion
        targetSdkVersion Versions.targetSdkVersion
        versionCode Versions.versionCode
        versionName Versions.versionName

        multiDexEnabled true
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    libraryVariants.all { variant ->
        if (variant.name == rootProject.ext.create) {
            variant.outputs.each { output ->
                output.outputFileName = "${archivesBaseName}.aar"
            }
        }
    }

    variantFilter { variant ->
        if (variant.buildType.name == rootProject.ext.ignore)
            variant.setIgnore(true)
    }
}

dependencies {
    provided fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(':jutils')

    implementation Libs.rxJava
    implementation Libs.kotlinStd
    implementation Libs.kotlinReflect
    implementation Libs.gmsBase
    implementation Libs.recyclerView
    implementation Libs.design
    implementation Libs.anko
    implementation Libs.joda
    implementation Libs.glide
    implementation Libs.mosbyMvi
    implementation Libs.apacheValidator
    implementation Libs.rxJavaAndroid
    kapt Libs.databindingCompiler
    kapt Libs.glideCompiler
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task copyArtefact(dependsOn: 'assemble', type: Copy) {
    from 'build/outputs/aar'
    into rootProject.ext.outputPath
}
assemble.finalizedBy copyArtefact

artifacts {
    archives sourcesJar
    archives javadocJar
}